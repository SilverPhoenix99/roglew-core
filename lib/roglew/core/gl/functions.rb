module Roglew
  module GL
    CORE_FUNCTIONS = {
        glBlendFunc:              [ :void, :uint, :uint ].freeze,
        glClear:                  [ :void, :uint ].freeze,
        glClearColor:             [ :void, :float, :float, :float, :float ].freeze,
        glClearDepth:             [ :void, :double ].freeze,
        glClearStencil:           [ :void, :int ].freeze,
        glColorMask:              [ :void, :bool, :bool, :bool, :bool ].freeze,
        glCullFace:               [ :void, :uint ].freeze,
        glDepthFunc:              [ :void, :uint ].freeze,
        glDepthMask:              [ :void, :uchar ].freeze,
        glDepthRange:             [ :void, :double, :double ].freeze,
        glDisable:                [ :void, :uint ].freeze,
        glDrawBuffer:             [ :void, :uint ].freeze,
        glEnable:                 [ :void, :uint ].freeze,
        glFinish:                 [ :void ].freeze,
        glFlush:                  [ :void ].freeze,
        glFrontFace:              [ :void, :uint ].freeze,
        glGetBooleanv:            [ :void, :uint, :pointer ].freeze,
        glGetDoublev:             [ :void, :uint, :pointer ].freeze,
        glGetError:               [ :uint ].freeze,
        glGetFloatv:              [ :void, :uint, :pointer ].freeze,
        glGetIntegerv:            [ :void, :uint, :pointer ].freeze,
        glGetString:              [ :string, :uint ].freeze,
        glGetTexImage:            [ :void, :uint, :int, :uint, :uint, :pointer ].freeze,
        glGetTexLevelParameterfv: [ :void, :uint, :int, :uint, :pointer ].freeze,
        glGetTexLevelParameteriv: [ :void, :uint, :int, :uint, :pointer ].freeze,
        glGetTexParameterfv:      [ :void, :uint, :uint, :pointer ].freeze,
        glGetTexParameteriv:      [ :void, :uint, :uint, :pointer ].freeze,
        glHint:                   [ :void, :uint, :uint ].freeze,
        glIsEnabled:              [ :uchar, :uint ].freeze,
        glLineWidth:              [ :void, :float ].freeze,
        glLogicOp:                [ :void, :uint ].freeze,
        glPixelStoref:            [ :void, :uint, :float ].freeze,
        glPixelStorei:            [ :void, :uint, :int ].freeze,
        glPointSize:              [ :void, :float ].freeze,
        glPolygonMode:            [ :void, :uint, :uint ].freeze,
        glReadBuffer:             [ :void, :uint ].freeze,
        glReadPixels:             [ :void, :int, :int, :int, :int, :uint, :uint, :pointer ].freeze,
        glScissor:                [ :void, :int, :int, :int, :int ].freeze,
        glStencilFunc:            [ :void, :uint, :int, :uint ].freeze,
        glStencilMask:            [ :void, :uint ].freeze,
        glStencilOp:              [ :void, :uint, :uint, :uint ].freeze,
        glTexImage1D:             [ :void, :uint, :int, :int, :int, :int, :uint, :uint, :pointer ].freeze,
        glTexImage2D:             [ :void, :uint, :int, :int, :int, :int, :int, :uint, :uint, :pointer ].freeze,
        glTexParameterf:          [ :void, :uint, :uint, :float ].freeze,
        glTexParameterfv:         [ :void, :uint, :uint, :pointer ].freeze,
        glTexParameteri:          [ :void, :uint, :uint, :int ].freeze,
        glTexParameteriv:         [ :void, :uint, :uint, :pointer ].freeze,
        glViewport:               [ :void, :int, :int, :int, :int ].freeze
    }.freeze.each do |name, function|
      ret, *args = function
      attach_function(name, args, ret)
    end
  end
end